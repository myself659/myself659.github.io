<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on 沉风网事</title>
    <link>http://myself659.github.io/categories/devops/</link>
    <description>Recent content in devops on 沉风网事</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>沉风网事</copyright>
    <lastBuildDate>Sun, 07 Apr 2024 11:58:06 +0200</lastBuildDate><atom:link href="http://myself659.github.io/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>setup uv for python development</title>
      <link>http://myself659.github.io/post/devops/python-uv-setup/</link>
      <pubDate>Sun, 07 Apr 2024 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/devops/python-uv-setup/</guid>
      <description>install 1 2 3 4 5 6 7 8 9  # On macOS and Linux curl -LsSf https://astral.sh/uv/install.sh | sh # On Windows powershell -c &amp;#34;irm https://astral.sh/uv/install.ps1 | iex&amp;#34; scoop install uv # With pip (if you must, not the preferred way though) pip install uv   setup a new project init 1 2  uv init uv_template cd uv_template   the folder structure:
1 2 3 4 5 6 7  ❯ dust 0B ┌── README.</description>
    </item>
    
    <item>
      <title>setup python development on windows11</title>
      <link>http://myself659.github.io/post/devops/windows-python-setup/</link>
      <pubDate>Fri, 05 Apr 2024 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/devops/windows-python-setup/</guid>
      <description>install scoop 1 2  Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression   update scoop 1  scoop update   install pyenv 1  scoop install pyenv   setup python install python with pyenv 1 2 3  pyenv install 3.10.0 pyenv local 3.10.0   install poetry 1  pip install poetry   configure poetry in: %APPDATA%\pypoetry
1 2 3 4  [virtualenvs] in-project = true virtualenvs.</description>
    </item>
    
    <item>
      <title>upgrade ubuntu in WSL</title>
      <link>http://myself659.github.io/post/devops/wsl-ubuntu-upgrade/</link>
      <pubDate>Tue, 02 Apr 2024 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/devops/wsl-ubuntu-upgrade/</guid>
      <description>show lsb-release before upgrade 1 2 3 4 5 6  cat /etc/lsb-release DISTRIB_ID=Ubuntu DISTRIB_RELEASE=22.04 DISTRIB_CODENAME=jammy DISTRIB_DESCRIPTION=&amp;#34;Ubuntu 22.04.4 LTS&amp;#34;   prepare open file with command is as follows:
1  sudo nano /etc/update-manager/release-upgrades   set Prompt=lts is as follows:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  # Default behavior for the release upgrader. [DEFAULT] # Default prompting and upgrade behavior, valid options: # # never - Never check for, or allow upgrading to, a new release.</description>
    </item>
    
    <item>
      <title>WSL command: export, import</title>
      <link>http://myself659.github.io/post/devops/wsl-move/</link>
      <pubDate>Mon, 01 Apr 2024 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/devops/wsl-move/</guid>
      <description>list before export 1  wsl -l -v   1 2 3  PS C:\Users\mysel&amp;gt; wsl -l -v NAME STATE VERSION * Ubuntu-22.04 Stopped 2   delete cache to reduce disk cost 1  rm -rf /home/ia/.cache/*   export 1 2  wsl.exe --export Ubuntu-22.04 I:\wslback\Ubuntu-22.04.bak   import 1  wsl.exe --import U22 i:\wsl\u22\ d:\wslback\Ubuntu-22.04.bak   run 1  wsl.exe -d U22   list after import 1  wsl -l -v   1 2 3 4  PS C:\Users\mysel&amp;gt; wsl -l -v NAME STATE VERSION * Ubuntu-22.</description>
    </item>
    
    <item>
      <title>setup CUDA development environment in WSL2</title>
      <link>http://myself659.github.io/post/devops/wsl-cuda/</link>
      <pubDate>Sat, 30 Mar 2024 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/devops/wsl-cuda/</guid>
      <description>Install the GCC compiler 1  sudo apt install gcc --fix-missing   Install Nvidia CUDA toolkit 1  sudo apt install nvidia-cuda-toolkit   check the Driver and CUDA versions 1 2  nvidia-smi nvcc -V   Install Python with Mamba 1 2  wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh bash Miniforge3-Linux-x86_64.sh   1 2 3  mamba create -n mycuda jupyterlab -c conda-forge mamba activate mycuda jupyter lab   Testing Cuda Search nvidia control panel, and select “Allow access to GPU performance counters to all users”</description>
    </item>
    
    <item>
      <title>setup python development environment in WSL</title>
      <link>http://myself659.github.io/post/devops/wsl-python/</link>
      <pubDate>Wed, 27 Mar 2024 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/devops/wsl-python/</guid>
      <description>requirement 1 2 3 4 5 6 7 8  sudo apt update sudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev sudo apt-get install lzma sudo apt-get install liblzma-dev sudo apt-get install libbz2-dev sudo apt-get install python3-tk   pyenv what is pyenv pyenv is for a Python version management + virtual environment tool.
install pyenv 1  curl https://pyenv.run | bash   pyenv</description>
    </item>
    
    <item>
      <title>WSL-network</title>
      <link>http://myself659.github.io/post/devops/wsl-1-network/</link>
      <pubDate>Tue, 26 Mar 2024 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/devops/wsl-1-network/</guid>
      <description>static ip address 1 2 3 4 5 6 7 8 9 10 11 netsh int ipv4 show interfaces Idx Met MTU 状态 名称 --- ---------- ---------- ------------ --------------------------- 1 75 4294967295 connected Loopback Pseudo-Interface 1 10 50 1500 disconnected WLAN 3 35 1500 connected 以太网 14 25 1500 disconnected 本地连接* 1 12 25 1500 disconnected 本地连接* 2</description>
    </item>
    
    <item>
      <title>windows terminal</title>
      <link>http://myself659.github.io/post/devops/windows-terminal/</link>
      <pubDate>Mon, 25 Mar 2024 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/devops/windows-terminal/</guid>
      <description>install On windows11, windows terminal has installed as default. If not, Please install windows terminal from Microsoft Store.
update PowerShell Get PowerShell Version:
1 2 3 4 5 6 7 8 9 10 11 12 13 14  $PSVersionTable Name Value ---- ----- PSVersion 5.1.22621.2506 PSEdition Desktop PSCompatibleVersions {1.0, 2.0, 3.0, 4.0...} BuildVersion 10.0.22621.2506 CLRVersion 4.0.30319.42000 WSManStackVersion 3.0 PSRemotingProtocolVersion 2.3 SerializationVersion 1.1.0.1   update PowerShell:
1  winget install --id Microsoft.</description>
    </item>
    
    <item>
      <title>WSL-101</title>
      <link>http://myself659.github.io/post/devops/wsl-0/</link>
      <pubDate>Sun, 24 Mar 2024 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/devops/wsl-0/</guid>
      <description>setup Manual installation steps for older versions of WSL tips ln from mnt to reduce disk space but impact performance 1 ln -s /mnt/e/go ~/go Troubleshooting &amp;ldquo;WslRegisterDistribution failed with error: 0x80370114&amp;rdquo; solution: 1 wsl --update refence Troubleshooting Windows Subsystem for Linux 跨 Windows 和 Linux 文件系统工作 Working across Windows and Linux file systems</description>
    </item>
    
    <item>
      <title>gcloud auth login from mainland in china</title>
      <link>http://myself659.github.io/post/k8s/gcloud-login-from-china/</link>
      <pubDate>Wed, 08 May 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/k8s/gcloud-login-from-china/</guid>
      <description>backgroud 最近使用了google cloud，所以打算试一下通过gcloud auth login登陆远程主机。 prerequisites 科学上网的通道 terminal配置代理 config gcp proxy for</description>
    </item>
    
  </channel>
</rss>
