<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>沉风网事</title>
    <link>http://myself659.github.io/</link>
    <description>Recent content on 沉风网事</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>沉风网事</copyright>
    <lastBuildDate>Mon, 18 May 2015 21:49:20 +0200</lastBuildDate>
    
	<atom:link href="http://myself659.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>学会背包问题，再也不怕动态规划</title>
      <link>http://myself659.github.io/post/dp-knapsack/</link>
      <pubDate>Sun, 23 Aug 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/dp-knapsack/</guid>
      <description>问题描述 Given weights and values of n items, put these items in a knapsack of capacity W to get the maximum total value in the knapsack. In other words, given two integer arrays val[0..n-1] and wt[0..n-1] which represent values and weights associated with n items respectively. Also given an integer W which represents knapsack capacity, find out the maximum value subset of val[] such that sum of</description>
    </item>
    
    <item>
      <title>谈谈GPT3</title>
      <link>http://myself659.github.io/post/gpt3-thought/</link>
      <pubDate>Sun, 09 Aug 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/gpt3-thought/</guid>
      <description>GPT-3 GPT-3全称是&amp;quot;General Pre-trained Transformer-3&amp;rdquo;，对应中文翻译为：第三代通用预训练转换器。 其wiki定</description>
    </item>
    
    <item>
      <title>谈谈跳出框架思考</title>
      <link>http://myself659.github.io/post/think-outof-box/</link>
      <pubDate>Fri, 26 Jun 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/think-outof-box/</guid>
      <description>引子 先看一下这道数学题： 画直线经过下图中九个点，并且做到不重复经过任何一个点。 这里不是出题给大家做，只是引出话题。 下面是这个问题的答案： 这个</description>
    </item>
    
    <item>
      <title>谈谈数字货币的反脆弱性</title>
      <link>http://myself659.github.io/post/cryptocurrency_antifrangible/</link>
      <pubDate>Sun, 31 May 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/cryptocurrency_antifrangible/</guid>
      <description>定义 首先我们来看一下反脆弱性的定义。这里直接借用： 有些事情能从冲击中受益，当暴露在波动性、随机性、混乱和压力、风险和不确定性下时，它们反而能</description>
    </item>
    
    <item>
      <title>分享：一图了解新型冠状病毒的症状有哪些</title>
      <link>http://myself659.github.io/post/covid-19-symptom/</link>
      <pubDate>Sun, 24 May 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/covid-19-symptom/</guid>
      <description>新型冠状病毒（Covid-19）在全球的传播与感染速度有一定的控制，但是并没有结束。全世界累计确诊已经超过了500万，累计死亡人数超过了30</description>
    </item>
    
    <item>
      <title>读书笔记:《非对称风险》</title>
      <link>http://myself659.github.io/post/book-skin-in-the-game-how/</link>
      <pubDate>Fri, 08 May 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/book-skin-in-the-game-how/</guid>
      <description>首先了解一下作者：纳西姆·塔勒布，研究不确定性的专家，华尔街明星交易员。他先后出版“不确定性”四部曲：《随机漫步的傻瓜》、《黑天鹅》、《反脆</description>
    </item>
    
    <item>
      <title>关于快速学习的思考</title>
      <link>http://myself659.github.io/post/how-to-learn-fast/</link>
      <pubDate>Sun, 26 Apr 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/how-to-learn-fast/</guid>
      <description>在知识经济与日新月异的时代，学习的重要无须多言。这个时代正在惩罚不学习和不会学习的人。 从整个知识体系上来看，如何学习属于元知识，属于基础知识</description>
    </item>
    
    <item>
      <title>后疫情时代会有哪些变化</title>
      <link>http://myself659.github.io/post/coronavirus-change/</link>
      <pubDate>Sun, 19 Apr 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/coronavirus-change/</guid>
      <description>现状 疫情从武汉爆发开始，到现在全球蔓延，全球确诊超过了226万。国内广州与黑龙江有复发的态势。但是全国基本上已经控制住，防控成绩也算相当不错</description>
    </item>
    
    <item>
      <title>libra的妥协与机会</title>
      <link>http://myself659.github.io/post/libra2-basic/</link>
      <pubDate>Fri, 17 Apr 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/libra2-basic/</guid>
      <description>2019年6月libra横空出世。我写了一篇关于libra的文章：Facebook libra是昙花一现还是星星之火。 文章的提到： 对，Libr</description>
    </item>
    
    <item>
      <title>我是如何学会冥想的</title>
      <link>http://myself659.github.io/post/meditation-start/</link>
      <pubDate>Sat, 11 Apr 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/meditation-start/</guid>
      <description>初识冥想 虽然以前也知道冥想，但是却没有对冥想产生什么兴趣。直到2018年去台湾遇到一个很有经历的人，先后在google，百度，阿里等公司从事</description>
    </item>
    
    <item>
      <title>关于投资几点感悟</title>
      <link>http://myself659.github.io/post/about-invest/</link>
      <pubDate>Fri, 03 Apr 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/about-invest/</guid>
      <description>背景 首先，吃一下瑞幸的瓜，表示对作空机构的敬意： 调研机构为了证明瑞幸咖啡造假，派出92个全职和1418个兼职调查员，在全国900多家门店蹲点</description>
    </item>
    
    <item>
      <title>github被攻击，程序员该怎么办</title>
      <link>http://myself659.github.io/post/github-hack/</link>
      <pubDate>Sun, 29 Mar 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/github-hack/</guid>
      <description>2020年3月27日，全世界最大的同性交友网站github被攻击了，连正常的首页都打不开。 Https并不是100%安全 github被攻击说明</description>
    </item>
    
    <item>
      <title>提高个人隐私数据安全的几点建议</title>
      <link>http://myself659.github.io/post/data-avoid-leak/</link>
      <pubDate>Sun, 22 Mar 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/data-avoid-leak/</guid>
      <description>最近，爆出了新浪微博用户数据泄漏的事件。虽然微博的安全技术总监罗某某拒不承认存在安全问题，但是想想李文亮医生的经历，这个事情真不能忽略。 李彦</description>
    </item>
    
    <item>
      <title>一周经历两次熔断，美股会跌多少?</title>
      <link>http://myself659.github.io/post/howmuch-us-stock-willfall/</link>
      <pubDate>Sun, 15 Mar 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/howmuch-us-stock-willfall/</guid>
      <description>进入话题之前了解一下美股指数熔断机制。 美股指数熔断机制的基准指数为标普500，单项跌幅阈值为7%、13%、20%。当指数较前一天收盘点位下跌</description>
    </item>
    
    <item>
      <title>在选择做什么之前，先问问自己这四个问题</title>
      <link>http://myself659.github.io/post/find-what-todo/</link>
      <pubDate>Sun, 08 Mar 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/find-what-todo/</guid>
      <description>在谈谈做事的原则提到做事的原则的基本原则。具体如下： 不要给自己设限 站在巨人的肩膀上 正确的方向 敏捷的行动 本文重点讨论如何选择做什么这一问题。不</description>
    </item>
    
    <item>
      <title>微盟删库事件复盘与思考</title>
      <link>http://myself659.github.io/post/weimeng-del-data/</link>
      <pubDate>Sun, 08 Mar 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/weimeng-del-data/</guid>
      <description>事故 先简单看一下整个事故的粗略时间线。 2月23日，微盟服务出现故障。商家商城、小程序均无法登录。 2月25日，微盟紧急恢复了核心业务的线上生产</description>
    </item>
    
    <item>
      <title>通过数据分析预测股票价格变化靠谱吗？</title>
      <link>http://myself659.github.io/post/stock-us-analysis/</link>
      <pubDate>Mon, 17 Feb 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/stock-us-analysis/</guid>
      <description>前言 在投资美股，先从数据分析开始这篇文章解决两个问题： 从哪里找数据？ 如何得到这些数据？ 在此基础这篇主要解决一个问题：以特斯拉为例说明如何利用</description>
    </item>
    
    <item>
      <title>投资美股，先从数据分析开始</title>
      <link>http://myself659.github.io/post/stock-us-data/</link>
      <pubDate>Thu, 06 Feb 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/stock-us-data/</guid>
      <description>背景 川大爷，常在twitter上吆喝美股多次创造历史高点。美股确实是一个资产配置的重要选项。 在进入市场之前，研究先行，作好功课。 获取数据 对于</description>
    </item>
    
    <item>
      <title>说说我眼中的科比</title>
      <link>http://myself659.github.io/post/kobe/</link>
      <pubDate>Thu, 30 Jan 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/kobe/</guid>
      <description>在高中的时候知道了NBA,看了比赛，知道了科比。多少年以来，篮球是我最喜欢的体育运动，科比是我最喜欢的NBA球星，估计也是我最喜欢的运动员。</description>
    </item>
    
    <item>
      <title>2020年比特币的龙头地位还会继续加强吗？</title>
      <link>http://myself659.github.io/post/why-btc-is-dominated/</link>
      <pubDate>Wed, 22 Jan 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/why-btc-is-dominated/</guid>
      <description>背景 比特币是世界诞生的第一个加密货币，从2009年上线以来市值一直都是NO.1. 表现 下面具体一下比特币的龙头表现： 从上面两图可以看出来，从2</description>
    </item>
    
    <item>
      <title>说说微信付费阅读</title>
      <link>http://myself659.github.io/post/wechat-payment-read/</link>
      <pubDate>Thu, 16 Jan 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/wechat-payment-read/</guid>
      <description>背景 2020年1月15号微信灰度发布公众帐号付费阅读功能。微信10亿用户的体量，最长的用户时长，所以一个付费阅读功能差不多引起全网的讨论。 时</description>
    </item>
    
    <item>
      <title>Gartner预测2020年区块链的发展</title>
      <link>http://myself659.github.io/post/blockchain-2020/</link>
      <pubDate>Wed, 08 Jan 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/blockchain-2020/</guid>
      <description>Gartner 首先介绍一下Gartner。 Gartner全球最具权威的IT研究与顾问咨询公司。同时也是魔力四象限与技术成熟度曲线提出者。所以Gartne</description>
    </item>
    
    <item>
      <title>程序员进阶精读书籍清单</title>
      <link>http://myself659.github.io/post/programer-book-list/</link>
      <pubDate>Thu, 02 Jan 2020 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/programer-book-list/</guid>
      <description>2020年加大搬砖的力度，还是一名程序员，继续成长与进步。 优秀程序员应该具备以下三方面能力： 扎实的计算机基础知识（计算机结构，操作系统，数据</description>
    </item>
    
    <item>
      <title>苹果微软亚马逊谷歌Facebook五大科技巨头是如何赚钱的</title>
      <link>http://myself659.github.io/post/tech-giant-income/</link>
      <pubDate>Thu, 21 Nov 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/tech-giant-income/</guid>
      <description>苹果微软亚马逊谷歌Facebook这五大科技巨头在2018年的收入总和超过了8000亿美元。 如果这五大科技巨头保证30%的增长率，这五大科技</description>
    </item>
    
    <item>
      <title>DoH FAQ</title>
      <link>http://myself659.github.io/post/about-doh/</link>
      <pubDate>Fri, 08 Nov 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/about-doh/</guid>
      <description>什么是DoH DoH是DNS over HTTPS。 传统DNS相当于DNS over UDP。 DoH带来哪些好处？ 采用DoH对用户来说有如下好处： DoH协议不允许</description>
    </item>
    
    <item>
      <title>搭建Substrate开发云节点</title>
      <link>http://myself659.github.io/post/substrate-cloud-node/</link>
      <pubDate>Wed, 18 Sep 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/substrate-cloud-node/</guid>
      <description>为什么要云节点 主要由以下几个原因： 国内GFW太狠，github都不能幸免，代码都不能下载，影响正常的开发 rust这个编译太占用cpu，内存，</description>
    </item>
    
    <item>
      <title>深入分析Golang sync.pool优化</title>
      <link>http://myself659.github.io/post/golang-sync-pool-2/</link>
      <pubDate>Fri, 06 Sep 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/golang-sync-pool-2/</guid>
      <description>前言 最近golang的1.13版本发布了，有很多新特性与改进合入。这里主要分析sync.pool的优化。 本文主要解答以下几个问题： sync.</description>
    </item>
    
    <item>
      <title>瑞·达利欧：不投资中国才是巨大的风险</title>
      <link>http://myself659.github.io/post/risk-of-vesting-china/</link>
      <pubDate>Sun, 18 Aug 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/risk-of-vesting-china/</guid>
      <description>不投资中国才是巨大的风险 最近，桥水基金创始人及《原则》的作者瑞·达利欧公开表示：不投资中国才是巨大的风险。如下图所示： 作为一个世界富豪榜排名</description>
    </item>
    
    <item>
      <title>Rust crate加速</title>
      <link>http://myself659.github.io/post/rust-crate-speedup/</link>
      <pubDate>Sun, 11 Aug 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/rust-crate-speedup/</guid>
      <description>由于墙的原因，导致cargo build，cargo run都会出现概率性失败，并且整个过程十分缓慢。 下面是解决方案： 方案1 在 ~/.cargo/</description>
    </item>
    
    <item>
      <title>安装python3.7</title>
      <link>http://myself659.github.io/post/install-python37/</link>
      <pubDate>Thu, 08 Aug 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/install-python37/</guid>
      <description>说明 完全是为了记录自己的操作记录，换一台新机器真是免不了要装python。记录下来，便于以后操作。 apt-get安装 1 2 3 4 5 6 7 8 apt update apt install</description>
    </item>
    
    <item>
      <title>如何选择合适的node版本</title>
      <link>http://myself659.github.io/post/node-version/</link>
      <pubDate>Mon, 08 Jul 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/node-version/</guid>
      <description>前言 作为一个常年以c,c++,golang为主的后端程序员，刚接触nodejs有一个困惑，就是node有哪么多版本到底该选择哪个版本呢？ no</description>
    </item>
    
    <item>
      <title>Facebook libra是昙花一现还是星星之火</title>
      <link>http://myself659.github.io/post/facebook-libra/</link>
      <pubDate>Wed, 26 Jun 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/facebook-libra/</guid>
      <description>前言 最近随着Libra横空出世，整个互联网有关的Libra新闻，评论等层出不穷，众说纷云。这么热闹，我当然也要插一脚，讲讲自己的一些思考与看</description>
    </item>
    
    <item>
      <title>深入分析Golang sync.pool</title>
      <link>http://myself659.github.io/post/golang-sync-pool-1/</link>
      <pubDate>Mon, 10 Jun 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/golang-sync-pool-1/</guid>
      <description>定义 sync.Pool是一个可以存或取的临时对象池。对外提供New、Get、Put等API，利用mutex支持多线程并发。 目标 sync.Po</description>
    </item>
    
    <item>
      <title>人生中最昂贵的教训：SIM卡转移攻击的细节(译文)</title>
      <link>http://myself659.github.io/post/sim-port-attack/</link>
      <pubDate>Thu, 30 May 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/sim-port-attack/</guid>
      <description>上周三我损失了10万美元。它在24小时的时间内在“SIM转移攻击”中消失，耗尽了我的Coinbase帐户。事件已经过去了四天，我被摧毁了。我</description>
    </item>
    
    <item>
      <title>关于zoom的一些思考与看法</title>
      <link>http://myself659.github.io/post/about-zoom/</link>
      <pubDate>Sun, 28 Apr 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/about-zoom/</guid>
      <description>前言 最近zoom上市，作为一名华人创业公司自然大受关注。下面从以下几个方面谈谈自己的一些思考与看法： 技术 领导 产品 商业 技术 对于视频面试会议，技</description>
    </item>
    
    <item>
      <title>分享一种分析信息技术发展的框架</title>
      <link>http://myself659.github.io/post/it-frame/</link>
      <pubDate>Sun, 10 Mar 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/it-frame/</guid>
      <description>信息技术发展史 为了与原文保持一致，将信息技术发展史分为以下6个阶段： 大型机时代 PC时代 互联网时代 社交网络时代 智能手机时代 区块链时代 框架介绍 将</description>
    </item>
    
    <item>
      <title>利用Kube Eagle监控Kubernetes集群资源</title>
      <link>http://myself659.github.io/post/k8s-kubeagle/</link>
      <pubDate>Sat, 09 Mar 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/k8s-kubeagle/</guid>
      <description>安装helm helm是Kubernetes集群的npm。 下载脚本add_helm.sh 脚本内容如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</description>
    </item>
    
    <item>
      <title>谈谈做事的原则</title>
      <link>http://myself659.github.io/post/principle-of-work/</link>
      <pubDate>Wed, 23 Jan 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/principle-of-work/</guid>
      <description>前言 这篇文章规划了很久，本来打算年前写，各种事情加上自己的拖延症，到现在才开始写。 做事 如果说人的一生做什么？总结一下，可以划分两个方面： 做人</description>
    </item>
    
    <item>
      <title>PoW过时了吗？</title>
      <link>http://myself659.github.io/post/pow-is-out/</link>
      <pubDate>Sat, 12 Jan 2019 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/pow-is-out/</guid>
      <description>ETC受到51%攻击 最近ETC受到51%攻击，值得注意是：ETC是受到51%攻击的币种中市值最高的。 先谈谈ETC受到51%攻击原因。ETC采</description>
    </item>
    
    <item>
      <title>关于区块链共识的一些思考</title>
      <link>http://myself659.github.io/post/%E5%85%B3%E4%BA%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%85%B1%E8%AF%86%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</link>
      <pubDate>Mon, 24 Dec 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/%E5%85%B3%E4%BA%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%85%B1%E8%AF%86%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</guid>
      <description>说明 前面写一篇关于分布式系统的文章，但是没有考虑拜占庭问题，所以聊聊区块链共识技术，在这个过程看看比特币是如何解决拜占庭问题和共识问题。 定义</description>
    </item>
    
    <item>
      <title>谈谈对分布式系统的一些思考</title>
      <link>http://myself659.github.io/post/distributed-theory/</link>
      <pubDate>Tue, 11 Dec 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/distributed-theory/</guid>
      <description>说明 本文限定在分布式系统不考虑拜占庭问题。即所有节点都是可信的。 定义 分布式系统是多个节点协作完全一个共同的业务。 重要性 分布式理论的重要性毋庸</description>
    </item>
    
    <item>
      <title>大型系统软件Comware研发总结</title>
      <link>http://myself659.github.io/post/comware-rd/</link>
      <pubDate>Wed, 05 Dec 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/comware-rd/</guid>
      <description>前言 前几个月写一篇关于研发管理的文章。在那篇文章提出一个简单的思考框架，并没有实际案例的分享及深度分析。所以在这里以华三Comware研发为</description>
    </item>
    
    <item>
      <title>说说在不同行业的编程体验</title>
      <link>http://myself659.github.io/post/%E8%AF%B4%E8%AF%B4%E5%9C%A8%E4%B8%8D%E5%90%8C%E8%A1%8C%E4%B8%9A%E7%9A%84%E7%BC%96%E7%A8%8B%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Sun, 02 Dec 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/%E8%AF%B4%E8%AF%B4%E5%9C%A8%E4%B8%8D%E5%90%8C%E8%A1%8C%E4%B8%9A%E7%9A%84%E7%BC%96%E7%A8%8B%E4%BD%93%E9%AA%8C/</guid>
      <description>回想起来，2010年毕业以来，在五家公司呆过，经历四个行业，在这引起行业编程体验各有不同，总结起来就下面四句话： 嵌入式行业：面向DataSh</description>
    </item>
    
    <item>
      <title>说说微信小程序</title>
      <link>http://myself659.github.io/post/about-weixin-miniprogram/</link>
      <pubDate>Sat, 01 Dec 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/about-weixin-miniprogram/</guid>
      <description>小程序在2018年确实火了，除了先行的微信小程序，后面紧接着跟着了蚂蚁金服的小程序，今日头条的小程序。这里先表明一下自己的立场，从微信小程序</description>
    </item>
    
    <item>
      <title>说说私钥保护技术</title>
      <link>http://myself659.github.io/post/secret-sharing/</link>
      <pubDate>Sun, 21 Oct 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/secret-sharing/</guid>
      <description>前言 私钥在区块链系统中代表是什么？私钥是钱。钱包的本质就是私钥。谁控制了私钥谁就控制对应钱包的数字资产，谁丢失了私钥也就相当于丢了对应钱包的</description>
    </item>
    
    <item>
      <title>数字货币交易所安全体系-资产篇</title>
      <link>http://myself659.github.io/post/exchage-safe-asset/</link>
      <pubDate>Fri, 19 Oct 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/exchage-safe-asset/</guid>
      <description>前面，简单介绍了数字货币交易所的安全体系，这一篇主要说说一下资产安全的一些要点。 如果将一条公链比作一个银行的话，当然这个银行是去中心化银行，</description>
    </item>
    
    <item>
      <title>安装与应用Prometheus监控Kubernetes集群</title>
      <link>http://myself659.github.io/post/k8s-monitor/</link>
      <pubDate>Wed, 17 Oct 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/k8s-monitor/</guid>
      <description>安装Prometheus RBAC设置,获取创建集群角色权限 1 2 3 4 ACCOUNT=$(gcloud info --format=&amp;#39;value(config.account)&amp;#39;) kubectl create clusterrolebinding owner-cluster-admin-binding \ --clusterrole cluster-admin \ --user $ACCOUNT 注意：如果集群部署在google cloud上需要</description>
    </item>
    
    <item>
      <title>基于Gitlab&#43;Kubernetes实现CI/CD</title>
      <link>http://myself659.github.io/post/k8s-cicd/</link>
      <pubDate>Tue, 16 Oct 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/k8s-cicd/</guid>
      <description>要求 基本技术栈要求如下： Golang Docker GitLab Kubernetes 具体原因参考关于技术选型的思考 步骤 创建Kubernetes集群 自己搭建集群也可以，但是投入生产不建议使用。这</description>
    </item>
    
    <item>
      <title>数字货币交易所安全防护体系介绍</title>
      <link>http://myself659.github.io/post/exchage-safe-arch/</link>
      <pubDate>Mon, 15 Oct 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/exchage-safe-arch/</guid>
      <description>说明 这里的交易所是指中心化交易所。下面按标题三个关键词展开说明。 交易所 交易所作为数字资产交易的平台。一直不断地就有安全问题出现，最著名的是M</description>
    </item>
    
    <item>
      <title>关于技术选型的思考</title>
      <link>http://myself659.github.io/post/tech-stack-explain/</link>
      <pubDate>Wed, 05 Sep 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/tech-stack-explain/</guid>
      <description>技术选型内容 技术选型从组成要素的角度分为两大类： 实现业务的代码 业务依赖的服务 本文围绕代码这一核心进行技术选型，对此分解以下五个问题： 怎么管理</description>
    </item>
    
    <item>
      <title>关于拼多多几点看法</title>
      <link>http://myself659.github.io/post/pdd-thought/</link>
      <pubDate>Sun, 29 Jul 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/pdd-thought/</guid>
      <description>拼多多战略采用农村包围城市，市场上定位准确，填补了三四线农村及中国底层人民的需求。 微信平台是拼多多快速成长的关键，利用微信带来的流量，流量带</description>
    </item>
    
    <item>
      <title>区块链开启游戏的新时代</title>
      <link>http://myself659.github.io/post/blockchain-new-game-time/</link>
      <pubDate>Sat, 21 Jul 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/blockchain-new-game-time/</guid>
      <description>自2008年比特币诞生以来，其代表的区链技术的发展程度令人兴奋，区块链很快就成为日常生活中的流行语。特别是对于游戏行业，区块链能够带来新的游</description>
    </item>
    
    <item>
      <title>leetcode-53. Maximum Subarray</title>
      <link>http://myself659.github.io/post/dp-max-subarray-sum/</link>
      <pubDate>Wed, 18 Jul 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/dp-max-subarray-sum/</guid>
      <description>题目 leetcode-53. Maximum Subarray 类似： leetcode-152. Maximum Product Subarray 要点是记录当前最大值，与最小值。 计算当前最值有三种可能： 当前值 前一个最大值与当前值之积 前一个最小值与当前值之积 从这三</description>
    </item>
    
    <item>
      <title>《原则》作者瑞·达利欧烧脑大作(1): 经济机器是怎样运行的</title>
      <link>http://myself659.github.io/post/ecomony-machine/</link>
      <pubDate>Thu, 05 Jul 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/ecomony-machine/</guid>
      <description>说明 本文的语音与视频版本如下： 经济机器是怎样运行的(语音+文字版) 经济机器是怎样运行的 (时长30分钟) Ray Dalio 关于作者 原文作者瑞·达利欧，为著名</description>
    </item>
    
    <item>
      <title>Golang最工程化的语言</title>
      <link>http://myself659.github.io/post/golang-eng/</link>
      <pubDate>Tue, 03 Jul 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/golang-eng/</guid>
      <description>Golang是什么语言 PHP是最好的语言。 Haskell最难学的语言。 Golang最工程化的语言。 下面分别从语言层面及软件工程两个方面进行说</description>
    </item>
    
    <item>
      <title>IPFS专题</title>
      <link>http://myself659.github.io/post/ipfs%E4%B8%93%E9%A2%98/</link>
      <pubDate>Thu, 21 Jun 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/ipfs%E4%B8%93%E9%A2%98/</guid>
      <description>前言 IPFS（包括filecoin）无论从技术视角还是商业视角都有很多有意思的内容（关键是自己很看好这个技术），所以要准备搞一个IPFS专题</description>
    </item>
    
    <item>
      <title>关于微软收购github几点看法</title>
      <link>http://myself659.github.io/post/ms-github/</link>
      <pubDate>Sun, 10 Jun 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/ms-github/</guid>
      <description>开源已经是一种潮流与趋势。从linux开始，开源软件支撑现在的互联网与云计算。有太多的项目如redis，docker，k8s，etcd等等；</description>
    </item>
    
    <item>
      <title>浅谈随机</title>
      <link>http://myself659.github.io/post/about-rand/</link>
      <pubDate>Fri, 08 Jun 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/about-rand/</guid>
      <description>随机是一个十分有意思的问题。 随机是一种选择方式 生活中最常见的例子就有这些： 抽签 抽奖 抛硬币 随机是一种隐藏方式 同样拿抽奖为例，将少量的中奖者隐藏</description>
    </item>
    
    <item>
      <title>以太坊交易池分析</title>
      <link>http://myself659.github.io/post/eth-txpool/</link>
      <pubDate>Tue, 15 May 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/eth-txpool/</guid>
      <description>简介 以太坊交易池有以下功能： 缓存交易 清理交易 实现交易gasPrice竞价功能 配合出块，提供打包交易 交易查询 配置 配置描述 geth中用数据结构T</description>
    </item>
    
    <item>
      <title>乱扯研发管理与领导</title>
      <link>http://myself659.github.io/post/rd-leadship/</link>
      <pubDate>Sat, 05 May 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/rd-leadship/</guid>
      <description>前言 优秀的技术人员与技术管理人员会一直紧缺。一个好的技术管理人员应该有自己的管理及领导指导原则。（Ps：最近在读《原则》这本书，深受其影响，</description>
    </item>
    
    <item>
      <title>以太坊提交交易流程分析</title>
      <link>http://myself659.github.io/post/eth-tx-submit/</link>
      <pubDate>Sat, 05 May 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/eth-tx-submit/</guid>
      <description>说明 代码基于go-ethereum，版本v1.8.10。 RPC代码入口 SendTransaction 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 // SendTransaction will create a transaction from the given arguments and // tries to sign it with</description>
    </item>
    
    <item>
      <title>社交网络摆脱不了的周期</title>
      <link>http://myself659.github.io/post/socialnetowrk-cannot-cycle/</link>
      <pubDate>Sat, 05 May 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/socialnetowrk-cannot-cycle/</guid>
      <description>没有什么是不可改变的。 Facebook有22亿用户。 MySpace曾经是世界之王。现在人们都已经遗忘了。 QQ还是让位微信，活跃度下降，用户时</description>
    </item>
    
    <item>
      <title>为什么BFT要求诚实节点数量大于总节点的三分之二</title>
      <link>http://myself659.github.io/post/distributed-bft/</link>
      <pubDate>Fri, 23 Mar 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/distributed-bft/</guid>
      <description>相信很多人都知道，BFT(Byzantine fault tolerance)要求诚实节点数量大于总节点的三分之二。 为什么会有这个要求？ 多数派原则 多数派</description>
    </item>
    
    <item>
      <title>矿工五宗罪</title>
      <link>http://myself659.github.io/post/%E7%9F%BF%E5%B7%A5%E4%BA%94%E5%AE%97%E7%BD%AA/</link>
      <pubDate>Thu, 08 Mar 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/%E7%9F%BF%E5%B7%A5%E4%BA%94%E5%AE%97%E7%BD%AA/</guid>
      <description>比特币生态 比特币生态有以下几个角色： 比特币核心开发者，他们开发与更新比特币技术, 负责开发与维护代码 矿工们，运行区块链技术与算力保证，负责执行</description>
    </item>
    
    <item>
      <title>从痛点，爽点，痒点看区块链</title>
      <link>http://myself659.github.io/post/blockchain-pain-happy-itchy/</link>
      <pubDate>Sun, 04 Mar 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/blockchain-pain-happy-itchy/</guid>
      <description>说明 希望通过痛点，爽点，痒点的分析，看看区块链是不是刚需？区块链在哪些场景下有迫切的需求？ 首先，先看看下面三个定义： 痛点就是恐惧 爽点是即时满</description>
    </item>
    
    <item>
      <title>USDT FAQ</title>
      <link>http://myself659.github.io/post/usdt-faq/</link>
      <pubDate>Sun, 25 Feb 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/usdt-faq/</guid>
      <description>USDT可信吗？ 技术上可信，但是取决于背后公司的实力背书。更多可以参考reddit 讨论 从现在的情况USDT并不可信，长期持有USDT有风险。</description>
    </item>
    
    <item>
      <title>USDT背后的技术原理</title>
      <link>http://myself659.github.io/post/usdt%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/</link>
      <pubDate>Thu, 22 Feb 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/usdt%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/</guid>
      <description>OP_RETURN 在进入正题前，我们需要了解比特币脚本OP_RETURN。 OP_RETURN是比特币0.9版本引入支持一种新的操作符，目的是允许开发者在交易</description>
    </item>
    
    <item>
      <title>array vs list</title>
      <link>http://myself659.github.io/post/array-vs-list/</link>
      <pubDate>Wed, 21 Feb 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/array-vs-list/</guid>
      <description>array define An array is collection of items stored at contiguous memory locations. The idea is to store multiple items of same type together. This makes it easier to calculate the position of each element by simply adding an offset to a base value, i.e., the memory location of the first element of the array (generally denoted by the name of the array). complexity space O(n) time write by index</description>
    </item>
    
    <item>
      <title>乱扯区块链战略</title>
      <link>http://myself659.github.io/post/blockchain-strategy/</link>
      <pubDate>Wed, 21 Feb 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/blockchain-strategy/</guid>
      <description>前言 随着数字货币大涨，带来区块链热潮，作为在这个风口的一员，也试图思考区块链与未来与战略。受埃隆·马斯克的影响：不要给自己设限，要作超出自己</description>
    </item>
    
    <item>
      <title>谈谈数字货币钱包</title>
      <link>http://myself659.github.io/post/blockchain-digit-wallet/</link>
      <pubDate>Wed, 21 Feb 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/blockchain-digit-wallet/</guid>
      <description>战略地位 基于区块链的价值互联网，离不开token经济。数字货币钱包在整个区块链生态的地位如同互联网的支付宝与微信支付。其重要性不用多说了。 功</description>
    </item>
    
    <item>
      <title>从货币的角度看比特币</title>
      <link>http://myself659.github.io/post/%E4%BB%8E%E8%B4%A7%E5%B8%81%E8%A7%92%E5%BA%A6%E7%9C%8B%E6%AF%94%E7%89%B9%E5%B8%81/</link>
      <pubDate>Mon, 05 Feb 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/%E4%BB%8E%E8%B4%A7%E5%B8%81%E8%A7%92%E5%BA%A6%E7%9C%8B%E6%AF%94%E7%89%B9%E5%B8%81/</guid>
      <description>说明 本文采用对比思维来比较货币与比特币。 整个内容通过问答的方式进行。 货币 问题：为什么需要货币？ 在国内充当交易等价物 解决国际贸易中不同种类的货</description>
    </item>
    
    <item>
      <title>对中国互联网产品的一些建议</title>
      <link>http://myself659.github.io/post/suggests-for-chinese-internet-productions/</link>
      <pubDate>Mon, 05 Feb 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/suggests-for-chinese-internet-productions/</guid>
      <description>具体以公司及产品划分。 腾讯 打通帐号系统，如qq与微信在其他腾讯产品的功能不一致 微信 整理未读信息，而不是让用户去找哪条信息未读，特别是存在大量</description>
    </item>
    
    <item>
      <title>英文学习材料</title>
      <link>http://myself659.github.io/post/tech-english-collection/</link>
      <pubDate>Thu, 25 Jan 2018 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/tech-english-collection/</guid>
      <description>Golang Let&amp;rsquo;s Talk Locks! Maintaining the Go Crypto Libraries Blockchain CoinTalk Arch Life of a Packet through Istio Algorithms behind Modern Storage Systems Aurora Serverless: The Good, the Bad and the Scalable rust How Rust Views Tradeoffs Rust&amp;rsquo;s Journey to Async/await More infoq Presentations</description>
    </item>
    
    <item>
      <title>区块链项目点评3-去中心化交易所</title>
      <link>http://myself659.github.io/post/blockchain-dex/</link>
      <pubDate>Fri, 22 Dec 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/blockchain-dex/</guid>
      <description>中心化交易所 先从中心化交易所说起，从本质上看数字货币交易所与生活中常见的股票交易是一样。整个交易系统的核心是：撮合引擎。其中撮合系统核心原则</description>
    </item>
    
    <item>
      <title>Gorm小技巧: 如何优雅地创建多个相同的表</title>
      <link>http://myself659.github.io/post/golang-gorm/</link>
      <pubDate>Thu, 21 Dec 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/golang-gorm/</guid>
      <description>背景 因为需要bitfinex抓取各种历史交易信息。为了实现可扩展与便于数据管理，在数据架构设计方面满足下面的需求： 不同的交易对的交易数据放到</description>
    </item>
    
    <item>
      <title>从数据库角度看区块链</title>
      <link>http://myself659.github.io/post/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E6%96%B9%E5%BC%8F%E6%AF%94%E8%BE%83/</link>
      <pubDate>Thu, 21 Dec 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E6%96%B9%E5%BC%8F%E6%AF%94%E8%BE%83/</guid>
      <description>对比 比较项 集中式数据库 分布式数据库 PoW区块链 bitcoin区块链 Hashgraph 少量的计算 Yes Yes No No Yes 抗DoS No No Yes Yes Yes 不存在SPOF No Yes Yes Yes Yes 加密发送 Yes</description>
    </item>
    
    <item>
      <title>比特币及莱特币节点连接失败处理</title>
      <link>http://myself659.github.io/post/%E6%AF%94%E7%89%B9%E5%B8%81%E5%8F%8A%E8%8E%B1%E7%89%B9%E5%B8%81%E8%8A%82%E7%82%B9%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5%E5%A4%84%E7%90%86/</link>
      <pubDate>Mon, 06 Nov 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/%E6%AF%94%E7%89%B9%E5%B8%81%E5%8F%8A%E8%8E%B1%E7%89%B9%E5%B8%81%E8%8A%82%E7%82%B9%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5%E5%A4%84%E7%90%86/</guid>
      <description>问题描述 节点进程起来后，同其他的节点连接失败。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 2017-11-14 08:03:36 connect() to 104.236.211.206:19335 failed after select(): Connection refused (111) 2017-11-14 08:03:37 connect() to 66.178.182.35:19335</description>
    </item>
    
    <item>
      <title>MacOS上设置终端代理</title>
      <link>http://myself659.github.io/post/2017-11-03-mac-tem-proxy/</link>
      <pubDate>Fri, 03 Nov 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-11-03-mac-tem-proxy/</guid>
      <description>由于20-1大的原因，各种梯子损失惨重。自己也只好自己动手搭建VPS。关于如何搭建梯子这里暂不描述。 说明 下面的操作是建立在成功搭建VPS基础</description>
    </item>
    
    <item>
      <title>说说智能合约</title>
      <link>http://myself659.github.io/post/about-smartcontract/</link>
      <pubDate>Wed, 01 Nov 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/about-smartcontract/</guid>
      <description>智能合约 智能合约伴随了以太坊出现的而诞生，是以太坊最大的亮点，以其在ICO的广泛地应用而被熟知。其定义是： 智能合约是存储在区块链网络中的一段</description>
    </item>
    
    <item>
      <title>这也许是最快的搭建博客网站的方式</title>
      <link>http://myself659.github.io/post/website-fast-build/</link>
      <pubDate>Fri, 27 Oct 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/website-fast-build/</guid>
      <description>前言 搭建个人博客有很多方式，如wordpress，jekii, hexo，个人DIY; 本文主要介绍另一种方案: hugo+caddy 建一个网站要要做哪些事情 这里分</description>
    </item>
    
    <item>
      <title>区块链项目点评2-以太坊</title>
      <link>http://myself659.github.io/post/blockchain-ethernum/</link>
      <pubDate>Sat, 21 Oct 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/blockchain-ethernum/</guid>
      <description>以太坊 一台超级计算机 现阶段最好的数字货币 继承比特币的区块链技术，同时引入了超级亮点：智能合约，让信任成为可能 以太币正在成为区块链经济中的石油</description>
    </item>
    
    <item>
      <title>区块链项目点评1-比特币</title>
      <link>http://myself659.github.io/post/blockchain-btc/</link>
      <pubDate>Fri, 20 Oct 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/blockchain-btc/</guid>
      <description>比特币 数字黄金，但是并比黄金好很多 区块链技术始祖 PoW共识是比特币技术最大的创新 将激励与竞争引入到机器，符合经济学原理 让财富最大程度上属于个</description>
    </item>
    
    <item>
      <title>Read</title>
      <link>http://myself659.github.io/post/read-post/</link>
      <pubDate>Mon, 02 Oct 2017 21:49:20 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/read-post/</guid>
      <description>评分说明 ☆☆☆☆☆，五星，经典之作，强烈推荐 ☆☆☆☆，四星， 适合大众需求，推荐 ☆☆☆，三星 不错，看个人口味与需求 ☆☆，二星 不推荐 ☆，一星 强烈</description>
    </item>
    
    <item>
      <title>Share</title>
      <link>http://myself659.github.io/post/share-post/</link>
      <pubDate>Mon, 02 Oct 2017 21:49:20 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/share-post/</guid>
      <description>科普 图解计算机科学 Why does time pass? | The Economist A MUST SEE!!! The Most Eye Opening 10 Minutes Of Your Life | Dr. Bruce Lipton Why Do Computers Use 1s and 0s? Binary and Transistors Explained. See How a CPU Works How do computers read code? 100 Amazing How-To Sites to Teach Yourself Anything 数学 The Map of Mathematics The Essence of</description>
    </item>
    
    <item>
      <title>Slide</title>
      <link>http://myself659.github.io/post/slide-post/</link>
      <pubDate>Mon, 02 Oct 2017 21:49:20 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/slide-post/</guid>
      <description>2017 高性能服务器设计与优化(High performance server design and optimization) Golang基础 比特币介绍-技术基础篇 2018 数字货币钱包产品定位与战略.pdf 下一代互联网基础：IP</description>
    </item>
    
    <item>
      <title>IPFS与下一代网络安全</title>
      <link>http://myself659.github.io/post/2017-09-21-ipfs-sec/</link>
      <pubDate>Thu, 21 Sep 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-09-21-ipfs-sec/</guid>
      <description>IPFS 先简单说一下IPFS。 IPFS是点对点协议InterPlanetary File System的简称，它是一个面向全球的、点对点的分布式版本文件系统</description>
    </item>
    
    <item>
      <title>关于弹性安全网络一点思考</title>
      <link>http://myself659.github.io/post/2017-09-20-next-network/</link>
      <pubDate>Wed, 20 Sep 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-09-20-next-network/</guid>
      <description>作为网络研发出身的我，从事网络研发时间也最长，一直也关注道哥的微信公众号。 下面就对道哥的提出弹性安全网络一些总结与思考。 弹性安全网络 具体从以</description>
    </item>
    
    <item>
      <title>以太坊私链智能合约实践</title>
      <link>http://myself659.github.io/post/2017-08-24-ethereum-start/</link>
      <pubDate>Thu, 24 Aug 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-08-24-ethereum-start/</guid>
      <description>环境说明 操作系统: macos.10.12.1 geth版本：1.5.9 solc版本：0.4.15 实践 1. 启动本地geth节点 1 Michaels-iMac:wallet eric$ geth --rpc --rpcaddr 127.0.0.1 --rpcport 8545 --dev --datadir myethchain 如上操作后，geth</description>
    </item>
    
    <item>
      <title>以太坊开发环境问题记录</title>
      <link>http://myself659.github.io/post/2017-08-22-ethereum-cannot-getsolidity/</link>
      <pubDate>Tue, 22 Aug 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-08-22-ethereum-cannot-getsolidity/</guid>
      <description>说明 主要记录以太坊开发环境过程出现的问题 getCompilers返回失败 问题描述 在搭建以太坊开发环境过程中，出现下面的错误信息： 1 2 3 4 5 6</description>
    </item>
    
    <item>
      <title>slice复用的陷阱</title>
      <link>http://myself659.github.io/post/2017-07-28-slice-trap/</link>
      <pubDate>Fri, 28 Jul 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-07-28-slice-trap/</guid>
      <description>前言 先下结论：slice复用得当心，引用不当深埋雷。如若复用请分叉，分叉之后再使用。 问题 先看一下代码吧 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19</description>
    </item>
    
    <item>
      <title>Linux进程诊断小结</title>
      <link>http://myself659.github.io/post/2017-05-10-linux-process-diagnose/</link>
      <pubDate>Wed, 10 May 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-05-10-linux-process-diagnose/</guid>
      <description>日常工作中最常见问题是如何诊断一个进程运行过程中出现的问题，下面的总结从进程诊断的角度来展示，而是不从工具与命令角度来展示，进程诊断是工作的</description>
    </item>
    
    <item>
      <title>使用golang present工具制作presentation</title>
      <link>http://myself659.github.io/post/2017-05-10-golang-present/</link>
      <pubDate>Wed, 10 May 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-05-10-golang-present/</guid>
      <description>依赖 依赖golang的开发环境 安装 present工具在golang.org/x/tools中，依赖golang.org/x/net包,安装过</description>
    </item>
    
    <item>
      <title>对于系统设计的一些想法</title>
      <link>http://myself659.github.io/post/2017-04-29-about-system-design/</link>
      <pubDate>Sat, 08 Apr 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-04-29-about-system-design/</guid>
      <description>前言 学习了google，facebook等国际一流大厂的开源方案，也研究了国内BAT的一些设计案例，在平时工作自然也少不了一些系统设计的工作</description>
    </item>
    
    <item>
      <title>阿里云ECS基本安全检查小结</title>
      <link>http://myself659.github.io/post/2017-04-08-ecs-basic-sec-check/</link>
      <pubDate>Sat, 08 Apr 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-04-08-ecs-basic-sec-check/</guid>
      <description>背景 查看阿里云ECS服务器日志发现如下： 1 2 3 4 5 6 7 type=USER_AUTH msg=audit(1491669519.156:15631): pid=22938 uid=0 auid=4294967295 ses=4294967295 msg=&amp;#39;op=PAM:authentication acct=&amp;#34;deploy&amp;#34; exe=&amp;#34;/usr/sbin/sshd&amp;#34; hostname=123.57.245.163 addr=123.57.245.163 terminal=ssh res=failed&amp;#39; type=USER_LOGIN msg=audit(1491669519.156:15632): pid=22938 uid=0 auid=4294967295 ses=4294967295 msg=&amp;#39;op=login acct=28696E76616C6964207573657229 exe=&amp;#34;/usr/sbin/sshd&amp;#34; hostname=? addr=123.57.245.163 terminal=sshd res=failed&amp;#39; type=USER_LOGIN msg=audit(1491669587.368:15634): pid=22940 uid=0 auid=4294967295 ses=4294967295 msg=&amp;#39;op=login acct=28756E6B6E6F776E207573657229 exe=&amp;#34;/usr/sbin/sshd&amp;#34; hostname=? addr=123.57.245.163 terminal=sshd res=failed&amp;#39; type=USER_LOGIN msg=audit(1491669587.368:15635): pid=22940 uid=0</description>
    </item>
    
    <item>
      <title>不要忘记那些正在追赶互联网潮流的用户</title>
      <link>http://myself659.github.io/post/2017-03-27-help-internet-available-more-people/</link>
      <pubDate>Mon, 27 Mar 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-03-27-help-internet-available-more-people/</guid>
      <description>引子 在一家推拿店里，排队等叫号，遇到一个五十多数大叔，下面是我们之间的对话： 大叔： 小伙子，帮我看一下怎么连接wifi？ 我： 好的。 （他把手机给</description>
    </item>
    
    <item>
      <title>LeetCode</title>
      <link>http://myself659.github.io/post/leetcode/</link>
      <pubDate>Sat, 18 Mar 2017 21:49:20 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/leetcode/</guid>
      <description>数据结构与算法实践</description>
    </item>
    
    <item>
      <title>Go的50度灰补充--http response只能读一次</title>
      <link>http://myself659.github.io/post/2017-02-20-go-case-1-my-shadeofgo/</link>
      <pubDate>Mon, 20 Feb 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-02-20-go-case-1-my-shadeofgo/</guid>
      <description>问题 还是从代码开始吧 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 func fetch(url string) { tlsConfig := &amp;amp;tls.Config{ InsecureSkipVerify: true, }</description>
    </item>
    
    <item>
      <title>TCP连接下载文件失败，也许该看看这篇文章</title>
      <link>http://myself659.github.io/post/2017-02-16-tcp-slow-down/</link>
      <pubDate>Thu, 16 Feb 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-02-16-tcp-slow-down/</guid>
      <description>体验一下标题党，现在自媒体横行，容我也放肆一回（多了我也不行，替自己码字能力捉急）！ 另起一行，到此为止，进入正题 缘起 最近通过uc浏览器下载a</description>
    </item>
    
    <item>
      <title>互联网在农村-用户</title>
      <link>http://myself659.github.io/post/2017-02-03-coutry-internet-user/</link>
      <pubDate>Fri, 03 Feb 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-02-03-coutry-internet-user/</guid>
      <description>上一篇从电和物理网络两个方面说明自己所看到的农村互联网基础设施情况。这一篇就看看在农村的互联网用户的一些情况。 根据对app使用情况分为以下几</description>
    </item>
    
    <item>
      <title>互联网在农村-基础设施</title>
      <link>http://myself659.github.io/post/2017-02-02-coutry-internet-infra/</link>
      <pubDate>Thu, 02 Feb 2017 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2017-02-02-coutry-internet-infra/</guid>
      <description>说明 老家在安徽省安庆市的一个小山村里，作为一名互联网从业人员，这次回家特地花了一点心思来观察家乡的互联网应用情况。 这是第一篇，先看农村互联网</description>
    </item>
    
    <item>
      <title>从C语言epoll编程到go net实现分析</title>
      <link>http://myself659.github.io/post/2016-09-10-from-cepoll-to-go-net/</link>
      <pubDate>Sat, 10 Sep 2016 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2016-09-10-from-cepoll-to-go-net/</guid>
      <description>说明 go源码版本：1.7 go源码运行环境：Linux epoll在c语言编程示例 先看一下大家比较熟悉的epoll在c语言中应用，代码取自rtm</description>
    </item>
    
    <item>
      <title>Go channel 编程篇</title>
      <link>http://myself659.github.io/post/2016-08-20-go-channel-program-demo/</link>
      <pubDate>Sat, 20 Aug 2016 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2016-08-20-go-channel-program-demo/</guid>
      <description>本篇以ChanBroker版本迭代过程，总结常见Channel编程问题 简介 ChanBroker设计主要参考Kafka模型，主要提供进程内go</description>
    </item>
    
    <item>
      <title>IM后端系统设计总结(2)</title>
      <link>http://myself659.github.io/post/2016-08-05-im-user-state/</link>
      <pubDate>Fri, 05 Aug 2016 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2016-08-05-im-user-state/</guid>
      <description>这篇具体写一下用户在线状态系统的具体设计。 后端架构 这个后端系统设计如下图： 很大众，国内基本都这么干，不多说 用户状态系统设计 初期设计 单IDC部</description>
    </item>
    
    <item>
      <title>IM后端系统设计总结(1)</title>
      <link>http://myself659.github.io/post/2016-07-29-im-message/</link>
      <pubDate>Fri, 29 Jul 2016 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2016-07-29-im-message/</guid>
      <description>定义IM 为用户提供即时消息服务，这里面有三个关键词：用户，消息，服务；下面根据三个关键词来展开总结，先从消息开始。 消息 消息分类 对消息分类，很</description>
    </item>
    
    <item>
      <title>Go channel 特点篇</title>
      <link>http://myself659.github.io/post/2016-07-26-go-channel-feature/</link>
      <pubDate>Tue, 26 Jul 2016 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2016-07-26-go-channel-feature/</guid>
      <description>channel模式 根据同步方式不同，channel有两种模式： 1、同步模式,形式如下： 1 ch := make(chan int) 2、队列模式，形式如下： 1 ch := make(chan int, 10) 根据数据</description>
    </item>
    
    <item>
      <title>10 Lessons from 10 Years of Amazon Web Services（译文）</title>
      <link>http://myself659.github.io/post/2016-06-02-10-lessons-from-10-years-of-amazon-web-services/</link>
      <pubDate>Thu, 02 Jun 2016 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2016-06-02-10-lessons-from-10-years-of-amazon-web-services/</guid>
      <description>前言 亚马逊在2006年3月14日发布AWS，到现在差不多10年了。回首过去的10年里，我们在构建 安全，高可用性，可扩展性，低成本的服务方面积</description>
    </item>
    
    <item>
      <title>Facebook live一些技术细节</title>
      <link>http://myself659.github.io/post/2016-05-27-facebook-live-detail/</link>
      <pubDate>Fri, 27 May 2016 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2016-05-27-facebook-live-detail/</guid>
      <description>协议选择 最初选择HLS,后面切换为RTMP，切换为RTMP主要为了降低延迟，提供更好直播用户体验。 解决并发问题 分发架构 采用Live stream serv</description>
    </item>
    
    <item>
      <title>git常用命令总结</title>
      <link>http://myself659.github.io/post/2016-05-21-git-cmd/</link>
      <pubDate>Sat, 21 May 2016 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2016-05-21-git-cmd/</guid>
      <description>git仓库 初始化一个版本仓库 1 git init clone远程版本库 1 git clone git@github.com:myself659/FFmpeg.git 添加远程版本库origin 1 git remote add origin git@github.com:myself659/rtmpserver_demo.git 查看远程仓库信息 1 git remote -v 删除远程仓库 1 git</description>
    </item>
    
    <item>
      <title>Linux内核常见crash原因</title>
      <link>http://myself659.github.io/post/2016-04-17-linux-kernel-crashs/</link>
      <pubDate>Sun, 17 Apr 2016 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2016-04-17-linux-kernel-crashs/</guid>
      <description>前言 与前同事交流，发现以前的技术经历与解决的问题，现在接触不多，但是想想还是很有意思，虽然很多细节现在已经不能表达出来或展示出来，但是还得写</description>
    </item>
    
    <item>
      <title>Linux x86-64 函数调用栈实例分析</title>
      <link>http://myself659.github.io/post/2016-03-09-x86-64-call-stack/</link>
      <pubDate>Wed, 09 Mar 2016 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2016-03-09-x86-64-call-stack/</guid>
      <description>前言 动手实践并写文章花5倍的时间一次性把事情做到90分，好过读别人文章只能做到60分，后面还需要花时间继续深入学习。本文目的希望通过分析一个</description>
    </item>
    
    <item>
      <title>代码是核心，但不仅仅是代码</title>
      <link>http://myself659.github.io/post/2016-03-05-do-more-than-coding/</link>
      <pubDate>Sat, 05 Mar 2016 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2016-03-05-do-more-than-coding/</guid>
      <description>其实以前也有类似的想法，但是决定写这篇文章是由下面一件事情引起的。 引子 同事自已造轮子要实现一个rtmp协议，在调试过程由于有一个问题有没有解</description>
    </item>
    
    <item>
      <title>docker image命令实践</title>
      <link>http://myself659.github.io/post/2016-01-28-docker-cmd-pratice/</link>
      <pubDate>Thu, 28 Jan 2016 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2016-01-28-docker-cmd-pratice/</guid>
      <description>搭建了docker环境，就来体验一下Docker，常用docker image命令如下： 1. 搜索docker image 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17</description>
    </item>
    
    <item>
      <title>升级Linux内核，搭建docker环境</title>
      <link>http://myself659.github.io/post/2015-12-13-docker-way-1-build-docker-env/</link>
      <pubDate>Sun, 13 Dec 2015 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2015-12-13-docker-way-1-build-docker-env/</guid>
      <description>docker可以说是去年最热的技术，也是业界大谈特谈的技术，到了今年有很多公司已经将docker应用于自己的生产环境。Docker已经从一个</description>
    </item>
    
    <item>
      <title>gdb自定义断点操作</title>
      <link>http://myself659.github.io/post/2015-08-28-gdb-command-example/</link>
      <pubDate>Fri, 28 Aug 2015 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2015-08-28-gdb-command-example/</guid>
      <description>gdb是c/c++上调试利器，有很多技巧能让调试程序与解决问题更加方便与高效，下面关于command 命令的使用一个实例，具体如下： 1. 设置断点</description>
    </item>
    
    <item>
      <title>nginx实践-添加自定义模块hello</title>
      <link>http://myself659.github.io/post/2015-08-08-nginx-pratice-1-add-hello-module/</link>
      <pubDate>Sat, 08 Aug 2015 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2015-08-08-nginx-pratice-1-add-hello-module/</guid>
      <description>nginx是一个值得学习与研究的开源代码，写这篇文章主要目的是让自己能够能够从最简单的任务开始，通过写作促进自己一步一步地深入学习与分析ng</description>
    </item>
    
    <item>
      <title>Linux netstat 应用示例</title>
      <link>http://myself659.github.io/post/2015-07-28-linux-netstat/</link>
      <pubDate>Tue, 28 Jul 2015 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2015-07-28-linux-netstat/</guid>
      <description>关于netstat netstat 命令用于显示各种网络相关信息，如网络连接，路由表，接口状态 (Interface Statistics)，masquerade 连接，多播成员 (Multicast</description>
    </item>
    
    <item>
      <title>读书笔记：《从0到1---开启商业与未来的秘密》</title>
      <link>http://myself659.github.io/post/2015-07-03-thought-about-zero-to-one/</link>
      <pubDate>Fri, 03 Jul 2015 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2015-07-03-thought-about-zero-to-one/</guid>
      <description>启发思考 在什么重要问题上你与其他有不同的看法？ 除了书中讲到参考模式:太多数人相信X，但是事实却是X的对立面；世界是多样的，我们应当追求正确的</description>
    </item>
    
    <item>
      <title>实现无符号整型数的分解</title>
      <link>http://myself659.github.io/post/2015-06-14-number-divide/</link>
      <pubDate>Sun, 14 Jun 2015 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2015-06-14-number-divide/</guid>
      <description>题目 将一个无符号数N拆分为不多于M个数，使拆分的数之和等于N,条件： N &amp;gt;= M； N与M都是无符号整型数 求：一共有多少中拆分方法？ 分析 参考代码 代码</description>
    </item>
    
    <item>
      <title>ping不通常见原因总结</title>
      <link>http://myself659.github.io/post/2015-05-27-ping-error/</link>
      <pubDate>Wed, 27 May 2015 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2015-05-27-ping-error/</guid>
      <description>ping不通从ping的流程分为两大类：请求报文没有到达对端与应答报文未收到</description>
    </item>
    
    <item>
      <title>那些可进入睡眠状态的Linux内核函数</title>
      <link>http://myself659.github.io/post/2015-06-01-linux-may-sleep-function/</link>
      <pubDate>Wed, 27 May 2015 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2015-06-01-linux-may-sleep-function/</guid>
      <description>在linux内核开发中断处理函数不能调用可能导致睡眠的函数，下面总结linux内核可能引起睡眠的函数如下： schedule函数 schedule_timeout schedule_timeout_uninterruptible schedule_timeout_interruptible cond_resched might_resched sl</description>
    </item>
    
    <item>
      <title>C语言代码 review的总结</title>
      <link>http://myself659.github.io/post/c-codereivew/</link>
      <pubDate>Sun, 24 May 2015 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/c-codereivew/</guid>
      <description>代码review是保证代码质量在项目开发及代码修改中一项重要的环节，下面就代码reiew的一些总结，总结一些代码的review的关注点，提高</description>
    </item>
    
    <item>
      <title>Linux性能优化杂谈</title>
      <link>http://myself659.github.io/post/2015-05-24-linux-perf-thought/</link>
      <pubDate>Sun, 24 May 2015 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2015-05-24-linux-perf-thought/</guid>
      <description>少资源 高吞吐 低延迟 在具体网络转发性能优化过程中对性能优化有以下几点体会与总结： 软硬结合 软件灵活，硬件高效，软硬结合就像双剑合壁，威力巨大；具</description>
    </item>
    
    <item>
      <title>一个linux网络丢包问题分析</title>
      <link>http://myself659.github.io/post/2015-05-24-linux-perf-droppacket/</link>
      <pubDate>Sun, 24 May 2015 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2015-05-24-linux-perf-droppacket/</guid>
      <description>丢包问题是十分常见一类问题，下面总结的一个网络丢包问题的分析过程。 问题描述 组网： TC-PORT1&amp;mdash;&amp;mdash;-VSR-eth1 TC-PORT2&amp;mdash;&amp;mdash;-VSR-eth2 打流： 报文从TC-Port1打入VSR-eth1，再从V</description>
    </item>
    
    <item>
      <title>在没有分支miss条件下，实现取最小值</title>
      <link>http://myself659.github.io/post/2015-05-24-linux-perf-tips-nobranchmiss/</link>
      <pubDate>Sun, 24 May 2015 11:58:06 +0200</pubDate>
      
      <guid>http://myself659.github.io/post/2015-05-24-linux-perf-tips-nobranchmiss/</guid>
      <description>在实际性能优化过程，加了一个if判断整个系统转发性能就有大约5%的下降，下面简单分享一种在没有分支miss条件下，实现取最小值的方法。 一般实</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://myself659.github.io/about/</link>
      <pubDate>Mon, 18 May 2015 21:49:20 +0200</pubDate>
      
      <guid>http://myself659.github.io/about/</guid>
      <description>个人说明 沉风 长在大山，学在中北，混在杭州 伪Geek，真宅男，野生程序员 Minimalist，Essentialist， Lifelong Learner，Pr</description>
    </item>
    
    <item>
      <title></title>
      <link>http://myself659.github.io/post/2017-02-04-coutry-internet-music/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://myself659.github.io/post/2017-02-04-coutry-internet-music/</guid>
      <description>+++ banner = &amp;quot;&amp;rdquo; categories = [&amp;ldquo;闲谈乱扯&amp;rdquo;] date = &amp;ldquo;2017-02-04T11:58:06+02:00&amp;rdquo; description = &amp;quot;&amp;rdquo; images = [] menu = &amp;quot;&amp;rdquo; tags = [&amp;ldquo;闲谈乱扯&amp;rdquo;] title = &amp;ldquo;互</description>
    </item>
    
    <item>
      <title></title>
      <link>http://myself659.github.io/post/2017-05-09-web-server-perf-and-design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://myself659.github.io/post/2017-05-09-web-server-perf-and-design/</guid>
      <description>+++ banner = &amp;quot;&amp;rdquo; categories = [&amp;ldquo;Arch&amp;rdquo;] date = &amp;ldquo;2017-05-09T11:58:06+02:00&amp;rdquo; description = &amp;quot;&amp;rdquo; images = [] menu = &amp;quot;&amp;rdquo; tags = [&amp;ldquo;Arch&amp;rdquo;] title = &amp;ldquo;高性能服务器设计与优化&amp;rdquo; draft = false +++ 为了构建自己的知识体系，对高性能服</description>
    </item>
    
    <item>
      <title></title>
      <link>http://myself659.github.io/post/arts/week-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://myself659.github.io/post/arts/week-3/</guid>
      <description>每周完成一个ARTS： 1.Algorithm：每周至少做一个 leetcode 的算法题 2.Review：阅读并点评至少一篇英文技术文章 3.Tip：学习至少一</description>
    </item>
    
    <item>
      <title></title>
      <link>http://myself659.github.io/post/blockchain-coronavirus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://myself659.github.io/post/blockchain-coronavirus/</guid>
      <description>参考 Token Economies in times of Covid-19</description>
    </item>
    
    <item>
      <title></title>
      <link>http://myself659.github.io/post/economic-recession/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://myself659.github.io/post/economic-recession/</guid>
      <description>参考 1.How to Prepare for a Recession</description>
    </item>
    
    <item>
      <title></title>
      <link>http://myself659.github.io/post/substrate-runtime/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://myself659.github.io/post/substrate-runtime/</guid>
      <description>banner = &amp;quot;&amp;rdquo; categories = [&amp;ldquo;Substrate&amp;rdquo;] date = &amp;ldquo;2019-09-19T11:58:06+02:00&amp;rdquo; description = &amp;quot;&amp;rdquo; images = [] menu = &amp;quot;&amp;rdquo; tags = [&amp;ldquo;Substrate&amp;rdquo;, &amp;ldquo;BlockChain&amp;rdquo;] title = &amp;ldquo;Substrate Runtime实践&amp;rdquo; draft = true +++ install substrate 安装substrate有以下两种方式： 快速安装</description>
    </item>
    
  </channel>
</rss>